# =============================================================================
# Unleak PoC - Environment Configuration
# =============================================================================
# Copy this file to .env and update with your actual values:
#   cp .env.example .env
#
# Required variables are marked with [REQUIRED]
# Optional variables have sensible defaults

# =============================================================================
# APPLICATION
# =============================================================================
NODE_ENV=development
PORT=8000

# =============================================================================
# POSTGRESQL DATABASE [REQUIRED]
# =============================================================================
# PostgreSQL connection details
DB_HOST=localhost
DB_PORT=5432
DB_NAME=unleak_poc
DB_USER=postgres
DB_PASSWORD=postgres
DB_MAX_CONNECTIONS=10
DB_SSL=false

# Alternative: Use full DATABASE_URL (overrides individual DB_* vars)
# DATABASE_URL=postgresql://postgres:password@localhost:5432/unleak_poc

# =============================================================================
# REDIS [REQUIRED]
# =============================================================================
# Redis is used for BullMQ job queues, circuit breaker state, and caching
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Alternative: Use full REDIS_URL (overrides individual REDIS_* vars)
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# BULL BOARD - Queue Monitoring Dashboard
# =============================================================================
# Access at: http://localhost:8000/admin/queues
# Credentials for basic auth (change in production!)
BULL_BOARD_USERNAME=admin
BULL_BOARD_PASSWORD=admin

# =============================================================================
# ADMIN ROUTES - Basic Authentication
# =============================================================================
# Set to 'true' to enable basic auth for all /admin/* routes
ADMIN_ENABLED=false

# =============================================================================
# FETCHER CONFIGURATION
# =============================================================================
# Fetcher adapter: 'direct' (native fetch) or 'zenrows' (proxy service)
FETCHER_ADAPTER=direct

# Default timeout for HTTP requests (milliseconds)
FETCHER_TIMEOUT_MS=30000

# Default number of retries for failed requests
FETCHER_RETRIES=3

# ZenRows API key (only needed if FETCHER_ADAPTER=zenrows)
# Get your key at: https://www.zenrows.com/
ZENROWS_API_KEY=

# =============================================================================
# CIRCUIT BREAKER - Automatic Failure Protection
# =============================================================================
# Set to 'true' to enable circuit breaker functionality
BREAKER_ENABLED=true

# How long circuit stays open before allowing probe requests (minutes)
BREAKER_OPEN_MINUTES=20

# Error rate threshold to trip breaker (percentage, 0-100)
BREAKER_ERROR_RATE_THRESHOLD_PCT=50

# Number of recent requests used to calculate error rate
BREAKER_ERROR_RATE_WINDOW=10

# =============================================================================
# RE-VERIFY / RATE LIMITING
# =============================================================================
# TTL for re-verify keys in Redis (seconds)
REVERIFY_TTL_SECONDS=120

# Maximum re-verify requests allowed per finding per hour
REVERIFY_RATE_PER_FINDING_PER_HOUR=5

# =============================================================================
# SLACK ALERTS - Notification Integration
# =============================================================================
# Slack Incoming Webhook URL for sending alerts
# Get your webhook URL at: https://api.slack.com/messaging/webhooks
# Leave empty to disable Slack notifications
SLACK_WEBHOOK_URL=

# Base URL used in Slack message links (should point to your API server)
BASE_URL=http://localhost:8000

# =============================================================================
# RULES ENGINE - Smart Finding Management
# =============================================================================
# Path to rules configuration JSON file
# See src/config/rules.json for format and examples
RULES_FILE=src/config/rules.json

# Path to allow-list CSV file (only URLs in this list are scanned)
# See src/config/allow-list.csv for format
ALLOW_LIST_FILE=src/config/allow-list.csv

# =============================================================================
# PROMETHEUS METRICS - Observability
# =============================================================================
# Metrics are automatically exposed at: GET /metrics
# No configuration needed - enabled by default
# Use with Prometheus, Grafana, or any compatible monitoring tool

# =============================================================================
# INTERNAL API
# =============================================================================
# Base URL for internal API calls (used by stability test and scripts)
API_BASE_URL=http://localhost:8000

# =============================================================================
# STRIPE LITE (Non-Transactional)
# =============================================================================
# Stripe Lite provides mock payment flows for testing without real transactions
# Set to 'true' to enable Stripe endpoints (default: false for safety)
STRIPE_LITE_ENABLED=false

# Stripe API key (Secret Key: sk_test_... or sk_live_...)
# Get your key at: https://dashboard.stripe.com/apikeys
STRIPE_API_KEY=

# Stripe Webhook Secret for signature verification (whsec_...)
# Get this when creating a webhook endpoint in Stripe Dashboard
# Leave blank to skip signature verification (not recommended for production)
STRIPE_WEBHOOK_SECRET=

# =============================================================================
# TUNING & THRESHOLDS
# =============================================================================
# Time-to-live for robots.txt cache entries (seconds)
ROBOTS_CACHE_TTL_SECONDS=600

# Latency threshold for slow request warnings (milliseconds)
LATENCY_MS_THRESHOLD=1500

# =============================================================================
# MAINTENANCE WINDOWS & COOLDOWNS
# =============================================================================
# These are configured in src/config/rules.json, not environment variables
# See DAY4_IMPLEMENTATION.md for detailed documentation
#
# Maintenance Windows: Time periods when scans are suppressed
# Cooldowns: Minimum time between duplicate finding alerts
# Default cooldown: 3600 seconds (1 hour)
